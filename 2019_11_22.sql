--LPAD('값 맨뒤에 붙일 값',반복수, '반복할 값') 

--h_2 정보시스템 하위의 조직 계층구조 조회 (dept0_02)
SELECT LEVEL lv,deptcd,
       LPAD(' ',4*(LEVEL-1),' ') || deptnm deptnm, p_deptcd
FROM dept_h a
START WITH deptcd = 'dept0_02'
CONNECT BY P_deptcd = PRIOR deptcd;


--h_3
--상향식 계층쿼리
--특정 노드로부터 자신의 부모노드를 탐색(트리 전체 탐색이 아니다)
--디자인팀을 시작으로 상위 부서를 조회
--디자인팀 dept0_00_0
SELECT *
FROM dept_h
START WITH deptcd = 'dept0_00_0'
CONNECT BY PRIOR p_deptcd = deptcd;


--h_4 : 하향식 쿼리
SELECT *
FROM H_SUM;

SELECT LPAD(' ' ,4*(LEVEL-1),' ') || S_ID S_ID, VALUE
FROM H_SUM
START WITH S_ID = '0'
CONNECT BY PRIOR S_ID = PS_ID;


--h_5 
SELECT *
FROM no_emp;

SELECT LPAD(' ',4*(LEVEL-1),' ')|| ORG_CD ORG_CD, no_emp
FROM no_emp
START WITH ORG_CD = 'XX회사'
CONNECT BY PRIOR ORG_CD = PARENT_ORG_CD;



--pruning branch (가지치기)
--계층쿼리에서 WHERE절은 START WITH, CONNECT BY절이 전부 적용된 이후에 실행된다.

--dept_h 테이블을 최상위 노드 부터 하향식으로 조회
SELECT deptcd, LPAD(' ', 4*(LEVEL-0), ' ') || deptnm deptnm
FROM dept_h
START WITH deptcd = 'dept0'
CONNECT BY PRIOR deptcd = p_deptcd;

--계층쿼리가 완성된 이후 WHERE절이 적용된다.
SELECT deptcd, LPAD(' ', 4*(LEVEL-0), ' ') || deptnm deptnm
FROM dept_h
WHERE deptnm != '정보기획부'
START WITH deptcd = 'dept0'
CONNECT BY PRIOR deptcd = p_deptcd;


SELECT deptcd, LPAD(' ', 4*(LEVEL-0), ' ') || deptnm deptnm
FROM dept_h
START WITH deptcd = 'dept0'
CONNECT BY PRIOR deptcd = p_deptcd
            AND deptnm != '정보기획부';


--CONNECT_BY_ROOT(col) : col의 최상위 노드 컬럼 값
--SYS_CONNECT_BY_PATH(col, 구분자) : col의 계층구조 순서를 구분자로 이은 경로
--    .LTRIM을 통해 최상위 노드 왼쪽의 구분자를 없에 주는 형태가 일반적
--CONNECT_BY_ISLEAF : 해당 row가 leaf node인지 판별( 1 : 0, O : X)
SELECT LPAD(' ',4*(LEVEL-1),' ') || org_cd org_cd,
       CONNECT_BY_ROOT(org_cd) root_org_cd,
       LTRIM(SYS_CONNECT_BY_PATH(org_cd, '-'), '-')path_org_cd,
       CONNECT_BY_ISLEAF
FROM no_emp
START WITH org_cd = 'XX회사'
CONNECT BY PRIOR org_cd = parent_org_cd;


--h_6
SELECT *
FROM board_test;

SELECT SEQ, LPAD(' ', 4*(LEVEL-1), ' ') || TITLE TITLE
FROM board_test
START WITH PARENT_SEQ IS NULL
CONNECT BY PRIOR SEQ = PARENT_SEQ;


--h_7
SELECT *
FROM board_test;

SELECT SEQ, LPAD(' ', 4*(LEVEL-1), ' ') || TITLE TITLE
FROM board_test
START WITH PARENT_SEQ IS NULL
CONNECT BY PRIOR SEQ = PARENT_SEQ
ORDER BY SEQ DESC;


--h_8
SELECT SEQ, LPAD(' ', 4*(LEVEL-1), ' ') || TITLE TITLE
FROM board_test
START WITH PARENT_SEQ IS NULL
CONNECT BY PRIOR SEQ = PARENT_SEQ
ORDER SIBLINGS BY SEQ DESC;


--h_9
SELECT SEQ, LPAD(' ', 4*(LEVEL-1), ' ') || TITLE TITLE
FROM board_test
START WITH PARENT_SEQ IS NULL
CONNECT BY PRIOR SEQ = PARENT_SEQ
ORDER SIBLINGS BY CASE 
                    WHEN parent_seq IS NULL THEN seq END DESC, 
                    SEQ;



SELECT ename, sal, ROWNUM rn
FROM
    (SELECT ename, sal
    FROM emp
    ORDER BY sal DESC);

